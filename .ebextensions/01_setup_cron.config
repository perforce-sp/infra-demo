files:
    "/etc/cron.d/mycron":
        mode: "000644"
        owner: root
        group: root
        content: |
            */5 * * * * root /usr/local/bin/every_five_minutes.sh >> /tmp/every_five_minutes.log 2>&1

    "/usr/local/bin/test_cron.sh":
      mode: "000755"
      owner: root
      group: root
      content: |
        #!/bin/bash
        TOKEN=`curl -H "X-aws-ec2-metadata-token-ttl-seconds: 21600" -X PUT http://169.254.169.254/latest/api/token  2>/dev/null`
        INSTANCE_ID=`curl -H "X-aws-ec2-metadata-token: $TOKEN" -X GET http://169.254.169.254/latest/meta-data/instance-id 2>/dev/null`
        REGION=`curl -H "X-aws-ec2-metadata-token: $TOKEN" -X GET http://169.254.169.254/latest/dynamic/instance-identity/document 2>/dev/null | jq -r .region`

        # Find the Auto Scaling Group name from the Elastic Beanstalk environment
        ASG=`aws ec2 describe-tags --filters "Name=resource-id,Values=$INSTANCE_ID" \
            --region $REGION --output json | jq -r '.[][] | select(.Key=="aws:autoscaling:groupName") | .Value'`

        # Find the first instance in the Auto Scaling Group
        FIRST=`aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names $ASG \
            --region $REGION --output json | \
            jq -r '.AutoScalingGroups[].Instances[] | select(.LifecycleState=="InService") | .InstanceId' | sort | head -1`

        # If the instance ids are the same exit 0
        [ "$FIRST" = "$INSTANCE_ID" ]

    "/usr/local/bin/every_five_minutes.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash
            /usr/local/bin/test_cron.sh || exit
            source /etc/profile.d/sh.local

            echo "Great success";

            exit 0
commands:
    remove_old_cron:
        command: "rm -f /etc/cron.d/mycron.bak"